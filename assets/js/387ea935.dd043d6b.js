"use strict";(self.webpackChunkts_rest=self.webpackChunkts_rest||[]).push([[989],{3905:(e,t,r)=>{r.d(t,{kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),y=o,f=d["".concat(p,".").concat(y)]||d[y]||l[y]||s;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6835:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>y,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),a=["components"],i={title:"@ts-test/nest",sidebar_position:7},p="Nest Server",c={unversionedId:"ts-rest-nest",id:"ts-rest-nest",title:"@ts-test/nest",description:'For each "sub-router" in tRPC you can define a new controller, for instance:',source:"@site/docs/ts-rest-nest.md",sourceDirName:".",slug:"/ts-rest-nest",permalink:"/docs/ts-rest-nest",draft:!1,editUrl:"https://github.com/ts-rest/ts-rest/docs/ts-rest-nest.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"@ts-test/nest",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"@ts-test/express",permalink:"/docs/ts-rest-express"}},l={},u=[{value:"Zod Body and Query Parsing",id:"zod-body-and-query-parsing",level:2}],d={toc:u};function y(e){var t=e.components,r=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"nest-server"},"Nest Server"),(0,s.kt)("p",null,'For each "sub-router" in tRPC you can define a new controller, for instance:'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const s = initNestServer(router.posts);\ntype ControllerShape = typeof s.controllerShape;\ntype RouteShape = typeof s.routeShapes;\n\n@Controller()\nexport class PostController implements ControllerShape {\n  constructor(private readonly postService: PostService) {}\n\n  @ApiRoute(s.route.getPosts)\n  async getPosts(\n    @ApiParams() { query: { take, skip } }: RouteShape['getPosts']\n  ) {\n    const posts = await this.postService.getPosts({ take, skip });\n\n    return posts;\n  }\n}\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"@ApiRoute")," decorator takes the route, defines the path and method for the controller route."),(0,s.kt)("p",null,'It also injects "appRoute" into the req object, allowing the ',(0,s.kt)("inlineCode",{parentName:"p"},"@ApiParams")," decorator automatically parse and check the query and body parameters."),(0,s.kt)("h2",{id:"zod-body-and-query-parsing"},"Zod Body and Query Parsing"),(0,s.kt)("p",null,"If you've defined your body or query using Zod, ",(0,s.kt)("inlineCode",{parentName:"p"},"@ApiParams")," automatically parses and checks the data against the schema. Throwing an error if the data is invalid."))}y.isMDXComponent=!0}}]);