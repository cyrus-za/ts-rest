"use strict";(self.webpackChunkts_rest=self.webpackChunkts_rest||[]).push([[554],{3905:(t,e,n)=>{n.d(e,{kt:()=>d});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,c=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,i(i({ref:e},u),{},{components:n})):r.createElement(m,i({ref:e},u))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2343:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},c="Tutorial",l={unversionedId:"tutorial",id:"tutorial",title:"Tutorial",description:"Contract Definition",source:"@site/docs/tutorial.md",sourceDirName:".",slug:"/tutorial",permalink:"/docs/tutorial",draft:!1,editUrl:"https://github.com/ts-rest/ts-rest/docs/tutorial.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"tRPC",permalink:"/docs/intro"},next:{title:"@ts-test/core",permalink:"/docs/ts-rest-core"}},p={},u=[{value:"Contract Definition",id:"contract-definition",level:2},{value:"Client",id:"client",level:2},{value:"Client (react-client)",id:"client-react-client",level:2}],d={toc:u};function f(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tutorial"},"Tutorial"),(0,o.kt)("h2",{id:"contract-definition"},"Contract Definition"),(0,o.kt)("p",null,"Install ",(0,o.kt)("inlineCode",{parentName:"p"},"@ts-rest/core"),", define a contract in a shared place or a shared package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const c = initContract();\n\nexport const contract = c.router({\n  posts: c.router({\n    get: c.query({\n      method: 'GET',\n      path: () => '/posts',\n      response: c.response<Post[]>(),\n    }),\n    create: c.mutation({\n      method: 'POST',\n      path: () => '/posts',\n      body: z.object({\n        title: z.string(),\n        content: z.string(),\n      }),\n      response: c.response<Post>(),\n    }),\n  }),\n});\n")),(0,o.kt)("h2",{id:"client"},"Client"),(0,o.kt)("p",null,"This is a basic client using ",(0,o.kt)("inlineCode",{parentName:"p"},"@ts-rest/core"),", uses ",(0,o.kt)("inlineCode",{parentName:"p"},"fetch")," under the hood."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const client = initClient(router, {\n  baseUrl: 'http://localhost:3333',\n  baseHeaders: {},\n});\n\nconst { data } = await client.posts.get();\n\nconst { data } = await client.posts.create({\n  body: {\n    title: 'Hello',\n    content: 'World',\n  },\n});\n")),(0,o.kt)("h2",{id:"client-react-client"},"Client (react-client)"),(0,o.kt)("p",null,"This is a client using",(0,o.kt)("inlineCode",{parentName:"p"}," @ts-react/react-query"),", using ",(0,o.kt)("inlineCode",{parentName:"p"},"@tanstack/react-query")," under the hood."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export const client = initReactQueryClient(router, {\n  baseUrl: 'http://localhost:3333',\n  baseHeaders: {},\n});\n\nconst App = () => {\n  // Effectively a useQuery hook\n  const { data, isLoading } = client.posts.get.useQuery();\n\n  // Effectively a useMutation hook\n  const { mutate, isLoading } = client.posts.create.useMutation();\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <div>{data.map((post) => post.title)}</div>\n      )}\n    </div>\n  );\n};\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@ts-rest/react-query")," allows for a regular fetch or mutation if you want, without having to initialise two different clients, one with ",(0,o.kt)("inlineCode",{parentName:"p"},"@ts-rest/core")," and one with ",(0,o.kt)("inlineCode",{parentName:"p"},"@ts-react/react-query"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// Normal fetch\nconst { data } = await client.posts.get.query();\n\n// useQuery hook\nconst { data, isLoading } = client.posts.get.useQuery();\n")))}f.isMDXComponent=!0}}]);